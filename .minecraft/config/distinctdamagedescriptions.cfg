# Configuration file

general {
    # Enable debug mode. Console will be filled with debug messages. The frequency/content of the messages may vary across versions. Only enable if troubleshooting or developing.
    B:"Debug Mode"=false

    ##########################################################################################################
    # core
    #--------------------------------------------------------------------------------------------------------#
    # Alter core behaviour about Distinct Damage Descriptions
    ##########################################################################################################

    core {
        # Enable Adaptive Weakness
        # Adaptive Weakness kicks in when a mob that is adaptive is hit by type(s) they are weak to.
        # Their adaptive amount is set to a percentage of the base amount, that percentage being equal to exp(avg), where: 
        #    exp being the exponential function
        #    avg is the average of all of the mobs weakness values that were hit (which is negative)
        # This triggers only when a mob's adaptability is triggered.
        B:"Enable Adaptive Weakness"=false

        # If set to true, and Distinct Damage Description will try to generate appropriate config values for weapons, mobs, armor and projectiles. This isn't super accurate and is rather primitive.
        B:"Generate Configs"=false

        # If set, DistinctDamageDescriptions will generate example JSON files on startup for custom damage types and creature types.
        B:"Generate JSON"=true

        # If true, DDD will register and add potions and potion effects that grant resistance buffs/debuffs
        B:"Register Potions"=true

        # If registration messages from Distinct Damage Descriptions are clogging the log, you can disable them here.
        B:"Suppress Registration Info"=false

        # If warning messages from Distinct Damage Descriptions are clogging the log, you can disable them here. This may be indicative of a real issue though, so make sure there's no real issue first!
        B:"Suppress Warnings"=false

        # If true, DistinctDamageDescriptions will load custom creature types from JSON located in config/distinctdamagedescriptions/creatureTypes.
        # These JSON files can be used to apply potion/critical hit immunities to large swaths of mobs at once. Also usuable in CraftTweaker.
        B:"Use Creature Types"=false

        # If true, Distinct Damage Descriptions will load and enable custom damage types from JSON found in config/distinctdamagedescriptions/damageTypes
        B:"Use Custom Damage Types"=false

        # Should Distinct Damage Descriptions use it's custom death messages for damage types?
        B:"Use Custom Death Messages"=false
    }

    ##########################################################################################################
    # damage
    #--------------------------------------------------------------------------------------------------------#
    # Alter the base damage of weapons and mobs
    ##########################################################################################################

    damage {
        # Modify the base damage type distribution of mobs.
        # Each entry is of the form id;[(t,a)] where:
        #    id is the namespaced id of the mob (e.g. minecraft:zombie)
        #    [(t,a)] is a list of tuples (t,a), separated by commas, that lists the percent of each damage type a mob does.
        #       t is the type of damage. Requires the 'ddd_' prefix. can use s, p, b, instead for slashing, piercing or bludegeoning
        #       a is the percent of this damage this mob does. if a = 0, it is ignored.
        #       If custom damage is disabled, any custom damage here will be distributed amongst all non-zero damages (Or just bludgeoning if none are non zero)
        #    All percents MUST add to 1
        # Mobs that aren't listed here will inflict full bludgeoning damage.
        # Malformed entries in this list will be ignored.
        S:"Mob Base Damage" <
            minecraft:blaze;[(b, 0.5), (ddd_fire, 0.5)]
            minecraft:cave_spider;[(p, 0.75), (ddd_poison, 0.25)]
            minecraft:magma_cube;[(b, 0.8), (ddd_fire, 0.2)]
            minecraft:ocelot;[(p, 0.3), (s, 0.7)]
            minecraft:polar_bear;[(s, 0.25), (b, 0.75)]
            minecraft:slime;[(b, 0.4), (ddd_acid, 0.6)]
            minecraft:spider;[(p, 1)]
            minecraft:wolf;[(p, 1)]
            minecraft:zombie;[(b, 0.75), (ddd_necrotic, 0.25)]
            minecraft:zombie_villager;[(b, 0.75), (ddd_necrotic, 0.25)]
            minecraft:zombie_pigman;[(b, 0.75), (ddd_necrotic, 0.25)]
            minecraft:wither;[(b, 0.1), (ddd_necrotic, 0.9)]
            minecraft:blaze;[(b, 0.25), (ddd_fire, 0.75)]
            minecraft:vex;[(ddd_psychic, 1)]
            minecraft:silverfish;[(p, 1)]
            minecraft:endermite;[(p, 1)]
            minecraft:shulker_bullet;[(ddd_psychic, 1)]
            tconstruct:blueslime;[(b, 0.4), (ddd_acid, 0.6)]
            thermalfoundation:blizz;[(b, 0.5), (ddd_cold, 0.5)]
            thermalfoundation:blizz_bolt;[(ddd_cold, 1)]
            thermalfoundation:basalz;[(b, 0.5), (ddd_force, 0.5)]
            thermalfoundation:basalz_bolt;[(b, 1)]
            thermalfoundation:blitz;[(b, 0.5), (ddd_thunder, 0.5)]
            thermalfoundation:blitz_bolt;[(ddd_thunder, 1)]
            srparasites:pri_longarms;[(b, 1)]
            srparasites:pri_manducater;[(b, 0.8), (p, 0.2)]
            srparasites:pri_summoner;[(b, 0.5), (p, 0.5)]
            srparasites:pri_reeker;[(b, 0.2), (p, 0.3), (ddd_poison, 0.5)]
            srparasites:pri_yelloweye;[(ddd_force, 0.5), (ddd_poison, 0.5)]
            srparasites:pri_bolster;[(b, 1)]
            srparasites:pri_arachnida;[(ddd_force, 0.5), (ddd_psychic, 0.5)]
            srparasites:pri_lum;[(p, 0.5), (ddd_necrotic, 0.5)]
            srparasites:host;[(ddd_force, 0.5), (ddd_psychic, 0.5)]
            srparasites:crux;[(ddd_fire, 0.5), (b, 0.5)]
            srparasites:heed;[(p, 0.5), (b, 0.5)]
            srparasites:sim_bear;[(b, 0.5), (p, 0.5)]
            srparasites:sim_enderman;[(b, 0.3), (p, 0.2), (ddd_psychic, 0.5)]
            srparasites:sim_adventurer;[(b, 0.5), (p, 0.5)]
            srparasites:sim_bigspider;[(b, 0.5), (p, 0.5)]
            srparasites:sim_human;[(b, 0.5), (p, 0.5)]
            srparasites:sim_humanhead;[(p, 1)]
            srparasites:sim_villager;[(b, 0.5), (p, 0.5)]
            srparasites:sim_villagerhead;[(p, 1)]
            srparasites:sim_cow;[(b, 0.5), (p, 0.5)]
            srparasites:sim_cowhead;[(p, 1)]
            srparasites:sim_horse;[(b, 0.5), (p, 0.5)]
            srparasites:sim_horsehead;[(p, 1)]
            srparasites:sim_pig;[(b, 0.5), (p, 0.5)]
            srparasites:sim_pighead;[(p, 1)]
            srparasites:sim_sheep;[(b, 0.5), (p, 0.5)]
            srparasites:sim_sheephead;[(p, 1)]
            srparasites:sim_wolf;[(b, 0.5), (p, 0.5)]
            srparasites:sim_wolfhead;[(p, 1)]
            srparasites:sim_dragone;[(b, 0.2), (p, 0.2), (ddd_force, 0.2), (ddd_poison, 0.2), (ddd_fire, 0.2)]
            srparasites:overseer;[(ddd_force, 0.5), (ddd_psychic, 0.5)]
            srparasites:bomber_light;[(b, 0.8), (ddd_fire, 0.2)]
            srparasites:bomber_heavy;[(b, 0.8), (ddd_fire, 0.2)]
            srparasites:carrier_heavy;[(b, 1)]
            srparasites:buglin;[(b, 1)]
            srparasites:carrier_flying;[(b, 1)]
            srparasites:rupter;[(b, 1)]
            srparasites:anc_dreadnaut;[(ddd_necrotic, 0.2), (ddd_force, 0.3), (ddd_psychic, 0.5)]
            srparasites:anc_overlord;[(b, 0.2), (p, 0.2), (ddd_necrotic, 0.2), (ddd_force, 0.2), (ddd_psychic, 0.2)]
            srparasites:vigilante;[(ddd_force, 0.5), (ddd_psychic, 0.5)]
            srparasites:ada_longarms;[(b, 1)]
            srparasites:ada_summoner;[(b, 0.8), (p, 0.2)]
            srparasites:ada_manducater;[(b, 0.5), (p, 0.5)]
            srparasites:ada_reeker;[(p, 0.5), (ddd_poison, 0.5)]
            srparasites:ada_yelloweye;[(ddd_force, 0.5), (ddd_poison, 0.5)]
            srparasites:ada_bolster;[(b, 1)]
            srparasites:ada_arachnida;[(ddd_force, 0.5), (ddd_psychic, 0.5)]
            lycanitesmobs:amalgalich;[(ddd_force, 0.5), (ddd_necrotic, 0.5)]
            lycanitesmobs:geist;[(b, 0.4), (ddd_necrotic, 0.6)]
            lycanitesmobs:ghoul;[(b, 0.6), (ddd_necrotic, 0.4)]
            lycanitesmobs:cryptkeeper;[(b, 0.5), (ddd_necrotic, 0.5)]
            lycanitesmobs:reaper;[(b, 1)]
            lycanitesmobs:gnekk;[(s, 0.3), (p, 0.2), (ddd_poison, 0.5)]
            lycanitesmobs:pixen;[(b, 1)]
            lycanitesmobs:clink;[(b, 1)]
            lycanitesmobs:arix;[(b, 1)]
            lycanitesmobs:afrit;[(b, 1)]
            lycanitesmobs:jabberwock;[(s, 0.8), (p, 0.2)]
            lycanitesmobs:arisaur;[(b, 1)]
            lycanitesmobs:wraamon;[(p, 0.5), (ddd_force, 0.4), (ddd_psychic, 0.1)]
            lycanitesmobs:manticore;[(p, 0.9), (ddd_poison, 0.1)]
            lycanitesmobs:barghest;[(p, 1.0)]
            lycanitesmobs:conba;[(b, 1)]
            lycanitesmobs:warg;[(p, 1.0)]
            lycanitesmobs:kobold;[(s, 0.2), (p, 0.8)]
            lycanitesmobs:makaalpha;[(b, 1)]
            lycanitesmobs:maka;[(b, 1)]
            lycanitesmobs:salamander;[(p, 0.4), (ddd_fire, 0.6)]
            lycanitesmobs:chupacabra;[(s, 0.4), (p, 0.4), (b, 0.2)]
            lycanitesmobs:geken;[(s, 0.3), (p, 0.3), (ddd_poison, 0.4)]
            lycanitesmobs:maug;[(s, 0.5), (b, 0.5)]
            lycanitesmobs:aspid;[(b, 1)]
            lycanitesmobs:dawon;[(s, 0.6), (p, 0.4)]
            lycanitesmobs:khalk;[(p, 0.2), (b, 0.8)]
            lycanitesmobs:quillbeast;[(b, 1)]
            lycanitesmobs:yeti;[(b, 1)]
            lycanitesmobs:yale;[(b, 1)]
            lycanitesmobs:epion;[(b, 1)]
            lycanitesmobs:uvaraptor;[(p, 1.0)]
            lycanitesmobs:roc;[(p, 1.0)]
            lycanitesmobs:raiko;[(p, 1.0)]
            lycanitesmobs:ventoraptor;[(s, 0.25), (p, 0.75)]
            lycanitesmobs:lobber;[(b, 0.5), (ddd_fire, 0.5)]
            lycanitesmobs:wildkin;[(s, 0.5), (b, 0.5)]
            lycanitesmobs:troll;[(b, 1.0)]
            lycanitesmobs:ettin;[(b, 1.0)]
            lycanitesmobs:lacedon;[(b, 1.0)]
            lycanitesmobs:roa;[(p, 1.0)]
            lycanitesmobs:silex;[(b, 1)]
            lycanitesmobs:abtu;[(p, 1.0)]
            lycanitesmobs:strider;[(p, 1.0)]
            lycanitesmobs:skylus;[(p, 1.0)]
            lycanitesmobs:thresher;[(p, 0.5), (b, 0.5)]
            lycanitesmobs:aglebemu;[(b, 0.2), (ddd_poison, 0.8)]
            lycanitesmobs:cephignis;[(b, 1)]
            lycanitesmobs:abaia;[(ddd_lightning, 1.0)]
            lycanitesmobs:ika;[(b, 1)]
            lycanitesmobs:dweller;[(s, 0.5), (ddd_poison, 0.5)]
            lycanitesmobs:ioray;[(b, 1)]
            lycanitesmobs:quetzodracl;[(s, 0.5), (p, 0.5)]
            lycanitesmobs:cockatrice;[(s, 0.5), (p, 0.5)]
            lycanitesmobs:morock;[(p, 1.0)]
            lycanitesmobs:ignibus;[(b, 1)]
            lycanitesmobs:zoataur;[(b, 1.0)]
            lycanitesmobs:remobra;[(p, 0.4), (ddd_poison, 0.6)]
            lycanitesmobs:spriggan;[(b, 1)]
            lycanitesmobs:tremor;[(b, 0.5), (ddd_thunder, 0.5)]
            lycanitesmobs:vapula;[(b, 1.0)]
            lycanitesmobs:geonach;[(p, 0.5), (b, 0.5)]
            lycanitesmobs:cinder;[(b, 1)]
            lycanitesmobs:reiver;[(b, 1)]
            lycanitesmobs:jengu;[(b, 1)]
            lycanitesmobs:spectre;[(ddd_force, 1.0)]
            lycanitesmobs:banshee;[(ddd_psychic, 1.0)]
            lycanitesmobs:grue;[(s, 0.5), (ddd_necrotic, 0.25), (ddd_psychic, 0.25)]
            lycanitesmobs:aegis;[(s, 0.5), (ddd_force, 0.5)]
            lycanitesmobs:zephyr;[(ddd_lightning, 1.0)]
            lycanitesmobs:djinn;[(b, 1)]
            lycanitesmobs:eechetik;[(ddd_poison, 1.0)]
            lycanitesmobs:wraith;[(ddd_necrotic, 1.0)]
            lycanitesmobs:sylph;[(b, 1)]
            lycanitesmobs:volcan;[(ddd_fire, 1.0)]
            lycanitesmobs:wisp;[(b, 1)]
            lycanitesmobs:argus;[(b, 1)]
            lycanitesmobs:nymph;[(b, 1)]
            lycanitesmobs:xaphan;[(b, 1)]
            lycanitesmobs:herma;[(p, 1.0)]
            lycanitesmobs:sutiramu;[(p, 0.6), (ddd_poison, 0.4)]
            lycanitesmobs:vespidqueen;[(p, 0.5), (ddd_poison, 0.5)]
            lycanitesmobs:vespid;[(p, 0.5), (ddd_poison, 0.5)]
            lycanitesmobs:joustalpha;[(p, 1.0)]
            lycanitesmobs:joust;[(p, 1.0)]
            lycanitesmobs:tarantula;[(p, 0.5), (ddd_poison, 0.5)]
            lycanitesmobs:calpod;[(p, 1.0)]
            lycanitesmobs:erepede;[(b, 1)]
            lycanitesmobs:concapedesegment;[(p, 1.0)]
            lycanitesmobs:concapede;[(p, 1.0)]
            lycanitesmobs:frostweaver;[(p, 0.5), (ddd_cold, 0.5)]
            lycanitesmobs:eyewig;[(p, 0.5), (ddd_acid, 0.25), (ddd_poison, 0.25)]
            lycanitesmobs:gorgomite;[(p, 1.0)]
            lycanitesmobs:darkling;[(p, 0.5), (ddd_necrotic, 0.5)]
            lycanitesmobs:lurker;[(p, 0.5), (ddd_poison, 0.5)]
            lycanitesmobs:triffid;[(s, 0.25), (p, 0.25), (ddd_poison, 0.5)]
            lycanitesmobs:treant;[(b, 1.0)]
            lycanitesmobs:ent;[(b, 0.5), (ddd_necrotic, 0.5)]
            lycanitesmobs:shambler;[(s, 0.5), (ddd_poison, 0.5)]
            lycanitesmobs:beholder;[(b, 1)]
            lycanitesmobs:trite;[(p, 0.5), (ddd_necrotic, 0.5)]
            lycanitesmobs:shade;[(s, 0.8), (ddd_psychic, 0.2)]
            lycanitesmobs:asmodeus;[(b, 1)]
            lycanitesmobs:astaroth;[(b, 1)]
            lycanitesmobs:krake;[(s, 0.25), (p, 0.25), (ddd_thunder, 0.5)]
            lycanitesmobs:crusk;[(p, 1.0)]
            lycanitesmobs:serpix;[(p, 0.8), (ddd_cold, 0.2)]
            lycanitesmobs:gorger;[(p, 0.8), (ddd_fire, 0.2)]
            lycanitesmobs:behemoth;[(b, 1)]
            lycanitesmobs:belph;[(b, 1)]
            lycanitesmobs:pinky;[(s, 0.5), (p, 0.5)]
            lycanitesmobs:archvile;[(b, 1)]
            lycanitesmobs:cacodemon;[(b, 1)]
            lycanitesmobs:rahovart;[(ddd_fire, 0.5), (ddd_necrotic, 0.5)]
         >

        # Modify the damage type of projectiles
        # Each entry is of the form id;[(t,a)];items where:
        #    id is the namespaced id of the projectile ENTITY (e.g. minecraft:arrow)
        #    [(t,a)] is a list of tuples (t,a), separated by commas, that lists the percent of each damage type a projectile does.
        #       t is the type of damage. Requires the 'ddd_' prefix. can use s, p, b, instead for slashing, piercing or bludegeoning
        #       a is the percent of this damage this mob does. if a = 0, it is ignored.
        #       If custom damage is disabled, any custom damage here will be distributed amongst all non-zero damages (Or just bludgeoning if none are non zero)
        #    All percents MUST add to 1
        #    items are the item ids associated with this projectile, separated by a comma (For example, arrow entities are associated with the item ids minecraft:arrow and minecraft:tipped_arrow). This is used for tooltips.
        #       If the projectile has no item form, omit this part, including the semicolon.
        # Projectiles that aren't listed here will inflict piercing damage, no matter the projectile.
        # Malformed entries in this list will be ignored.
        S:"Projectile Damage Type" <
            minecraft:arrow;[(p, 0.5), (b, 0.5)];minecraft:arrow,minecraft:tipped_arrow
            minecraft:spectral_arrow;[(p, 0.3), (b, 0.5), (ddd_radiant, 0.2)];minecraft:spectral_arrow
            minecraft:llama_spit;[(b, 1)]
            srparasites:ancientball;[(ddd_necrotic, 0.2), (ddd_force, 0.3), (ddd_psychic, 0.5)]
            srparasites:homming;[(b, 0.2), (p, 0.2), (ddd_necrotic, 0.2), (ddd_force, 0.2), (ddd_psychic, 0.2)]
            srparasites:spineball;[(ddd_force, 0.5), (ddd_poison, 0.5)]
            lycanitesmobs:whirlwind;[(ddd_cold, 0.3), (ddd_thunder, 0.7)];lycanitesmobs:whirlwindcharge
            lycanitesmobs:magma;[(ddd_fire, 0.6), (b, 0.4)];lycanitesmobs:magmacharge,lycanitesmobs:magmascepter
            lycanitesmobs:frostbolt;[(ddd_cold, 1)];lycanitesmobs:frostboltcharge,lycanitesmobs:frostboltscepter
            lycanitesmobs:spectralbolt;[(ddd_psychic, 0.5), (ddd_force, 0.5)];lycanitesmobs:spectralboltcharge,lycanitesmobs:spectralboltscepter
            lycanitesmobs:venomshot;[(ddd_poison, 1)];lycanitesmobs:venomshotcharge
            lycanitesmobs:boulderblast;[(b, 1)];lycanitesmobs:boulderblastcharge,lycanitesmobs:boulderblastscepter
            lycanitesmobs:icefireball;[(ddd_cold, 1)];lycanitesmobs:icefireballcharge,lycanitesmobs:icefirescepter
            lycanitesmobs:hellfireball;[(ddd_fire, 0.5), (ddd_necrotic, 0.5)];lycanitesmobs:hellfireballcharge,lycanitesmobs:hellfirescepter
            lycanitesmobs:quill;[(p, 1)];lycanitesmobs:quillcharge,lycanitesmobs:quillscepter
            lycanitesmobs:scorchfireball;[(ddd_fire, 0.5), (ddd_acid, 0.5)];lycanitesmobs:scorchfireballcharge,lycanitesmobs:scorchfirescepter
            lycanitesmobs:throwingscythe;[(p, 1)];lycanitesmobs:throwingscythecharge
            lycanitesmobs:acidsplash;[(ddd_acid, 1)];lycanitesmobs:acidsplashcharge
            lycanitesmobs:lobdarklings;[(b, 1)];lycanitesmobs:lobdarklingscharge
            lycanitesmobs:faebolt;[(ddd_necrotic, 0.5), (ddd_radiant, 0.5)];lycanitesmobs:faeboltcharge
            lycanitesmobs:ember;[(ddd_fire, 1)];lycanitesmobs:embercharge
            lycanitesmobs:poop;[(b, 0.3), (ddd_poison, 0.7)];lycanitesmobs:poopcharge,lycanitesmobs:poopscepter
            lycanitesmobs:lifedrain;[(ddd_necrotic, 1)];lycanitesmobs:lifedraincharge,lycanitesmobs:lifedrainscepter
            lycanitesmobs:aquapulse;[(b, 1)];lycanitesmobs:aquapulsecharge,lycanitesmobs:aquapulsescepter
            lycanitesmobs:arcanelaserstorm;[(b, 0.25), (ddd_lightning, 0.25), (ddd_thunder, 0.25), (ddd_force, 0.25)];lycanitesmobs:arcanelaserstormcharge,lycanitesmobs:arcanelaserstormscepter
            lycanitesmobs:aetherwave;[(ddd_radiant, 1)];lycanitesmobs:aetherwavecharge
            lycanitesmobs:lightball;[(ddd_radiant, 1)];lycanitesmobs:lightballcharge
            lycanitesmobs:mudshot;[(b, 1)];lycanitesmobs:mudshotcharge,lycanitesmobs:mudshotscepter
            lycanitesmobs:crystalshard;[(p, 0.8), (b, 0.2)];lycanitesmobs:crystalshardcharge
            lycanitesmobs:tundra;[(ddd_cold, 0.5), (b, 0.5)];lycanitesmobs:tundracharge,lycanitesmobs:tundrascepter
            lycanitesmobs:tricksterflare;[(ddd_force, 1)];lycanitesmobs:tricksterflarecharge
            lycanitesmobs:demonicblast;[(ddd_lightning, 0.8), (ddd_necrotic, 0.2)];lycanitesmobs:demonicblastcharge,lycanitesmobs:demoniclightningscepter
            lycanitesmobs:bloodleech;[(ddd_necrotic, 1)];lycanitesmobs:bloodleechcharge,lycanitesmobs:bloodleechscepter
            lycanitesmobs:frostweb;[(ddd_cold, 1)];lycanitesmobs:frostwebcharge,lycanitesmobs:frostwebscepter
            lycanitesmobs:chaosorb;[(ddd_force, 1)];lycanitesmobs:chaosorbcharge
            lycanitesmobs:poisonray;[(ddd_poison, 0.5), (ddd_necrotic, 0.5)];lycanitesmobs:poisonraycharge,lycanitesmobs:poisonrayscepter
            lycanitesmobs:blizzard;[(ddd_cold, 1)];lycanitesmobs:blizzardcharge,lycanitesmobs:blizzardscepter
            lycanitesmobs:doomfireball;[(ddd_fire, 0.5), (ddd_force, 0.5)];lycanitesmobs:doomfireballcharge,lycanitesmobs:doomfirescepter
            lycanitesmobs:waterjet;[(b, 0.5), (ddd_acid, 0.5)];lycanitesmobs:waterjetcharge,lycanitesmobs:waterjetscepter
            lycanitesmobs:devilstar;[(ddd_necrotic, 0.5), (ddd_force, 0.5)];lycanitesmobs:devilstarcharge
         >

        # Modify the base damage type distribution of weapons/items.
        # Each entry is of the form id;[(t,a)] where:
        #    id is the namespaced id of the item (e.g. minecraft:diamond_sword)
        #    [(t,a)] is a list of tuples (t,a), separated by commas, that lists the percent of each damage type an item does.
        #       t is the type of damage. Requires the 'ddd_' prefix. can use s, p, b, instead for slashing, piercing or bludegeoning
        #       a is the percent of this damage this mob does. if a = 0, it is ignored.
        #       If custom damage is disabled, any custom damage here will be distributed amongst all non-zero damages (Or just bludgeoning if none are non zero)
        #    All percents MUST add to 1
        # Items that aren't listed here will inflict 100% bludgeoning damage, no matter the item.
        # Malformed entries in this list will be ignored.
        S:"Weapon Base Damage" <
            minecraft:blaze_rod;[(ddd_fire, 1)]
            minecraft:nether_star;[(ddd_necrotic, 0.5), (ddd_force, 0.5)]
            minecraft:torch;[(ddd_fire, 1)]
            minecraft:redstone_torch;[(b, 0.9), (ddd_lightning, 0.1)]
            minecraft:arrow;[(p, 1)]
            minecraft:tipped_arrow;[(p, 1)]
            minecraft:spectral_arrow;[(p, 1)]
            minecraft:wooden_sword;[(s, 0.5), (b, 0.5)]
            minecraft:wooden_axe;[(s, 0.3), (b, 0.7)]
            minecraft:wooden_pickaxe;[(p, 0.5), (b, 0.5)]
            minecraft:wooden_shovel;[(b, 1)]
            minecraft:wooden_hoe;[(p, 0.5), (b, 0.5)]
            minecraft:stone_sword;[(b, 1)]
            minecraft:stone_axe;[(b, 1)]
            minecraft:stone_pickaxe;[(p, 0.2), (b, 0.8)]
            minecraft:stone_shovel;[(b, 1)]
            minecraft:stone_hoe;[(p, 0.2), (b, 0.8)]
            minecraft:iron_sword;[(s, 0.8), (p, 0.2)]
            minecraft:iron_axe;[(s, 0.6), (b, 0.4)]
            minecraft:iron_pickaxe;[(p, 0.9), (b, 0.1)]
            minecraft:iron_shovel;[(p, 0.1), (b, 0.9)]
            minecraft:iron_hoe;[(p, 1)]
            minecraft:golden_sword;[(s, 1)]
            minecraft:golden_axe;[(s, 0.4), (b, 0.6)]
            minecraft:golden_pickaxe;[(p, 1)]
            minecraft:golden_shovel;[(b, 1)]
            minecraft:golden_hoe;[(p, 1)]
            minecraft:diamond_sword;[(s, 1)]
            minecraft:diamond_axe;[(s, 0.7), (b, 0.3)]
            minecraft:diamond_pickaxe;[(p, 1)]
            minecraft:diamond_shovel;[(b, 1)]
            minecraft:diamond_hoe;[(p, 1)]
            tconstruct:stone_torch;[(ddd_fire, 1)]
            tconstruct:slimesling;[(b, 0.9), (ddd_acid, 0.1)]
            tconstruct:pickaxe;[(p, 1)]
            tconstruct:shovel;[(b, 1)]
            tconstruct:hatchet;[(s, 0.3), (b, 0.7)]
            tconstruct:mattock;[(s, 0.45), (b, 0.45), (p, 0.1)]
            tconstruct:kama;[(p, 0.8), (s, 0.2)]
            tconstruct:hammer;[(b, 1)]
            tconstruct:excavator;[(b, 1)]
            tconstruct:lumberaxe;[(s, 0.5), (b, 0.5)]
            tconstruct:scythe;[(s, 0.8), (p, 0.2)]
            tconstruct:broadsword;[(s, 1)]
            tconstruct:longsword;[(s, 1)]
            tconstruct:rapier;[(p, 1)]
            tconstruct:frypan;[(b, 1)]
            tconstruct:battlesign;[(b, 1)]
            tconstruct:cleaver;[(s, 0.9), (b, 0.1)]
            tconstruct:shortbow;[(b, 1)]
            tconstruct:longbow;[(b, 1)]
            tconstruct:crossbow;[(b, 1)]
            tconstruct:arrow;[(p, 1)]
            tconstruct:bolt;[(p, 1)]
            tconstruct:shuriken;[(s, 1)]
            lycanitesmobs:grueclaw;[(s, 0.5), (ddd_necrotic, 0.25), (ddd_psychic, 0.25)]
            lycanitesmobs:geonachspear;[(p, 1)]
            lycanitesmobs:remobrawing;[(s, 0.5), (ddd_poison, 0.5)]
            lycanitesmobs:zephyrblade;[(s, 0.2), (ddd_lightning, 0.8)]
            lycanitesmobs:clinkscythe;[(s, 0.7), (p, 0.3)]
            lycanitesmobs:geonachfist;[(b, 1)]
            lycanitesmobs:cinderblade;[(ddd_fire, 1)]
            lycanitesmobs:vapulacrystal;[(p, 0.8), (b, 0.2)]
            lycanitesmobs:reiverhorns;[(p, 0.2), (ddd_cold, 0.8)]
            lycanitesmobs:woodenpaxel;[(s, 0.5), (b, 0.5)]
            lycanitesmobs:ironpaxel;[(s, 0.8), (p, 0.2)]
            lycanitesmobs:sprigganheart;[(b, 1)]
            lycanitesmobs:gammasphere;[(ddd_radiant, 1)]
         >

        ##########################################################################################################
        # extra damage classification
        #--------------------------------------------------------------------------------------------------------#
        # Enable/disable damage distributions for certain vanilla damage sources.
        ##########################################################################################################

        "extra damage classification" {
            # Enable/disable the anvil damage distribution. Anvils inflict bludgeoning damage with this enabled, however this damage can only be reduced by helmets, and is capped at a 25% damage reduction. If disabled, vanilla handles it normally.
            B:"Anvil Distribution"=true

            # Enable/disable the cactus damage distribution. Cacti inflict piercing damage with this enabled. If disabled, vanilla handles it normally.
            B:"Cactus Distribution"=true

            # Enable/disable daylight burning distribution. Undead burning in the day while exposed to the sky will receive radiant damage when enabled. Only those undead specified in Daylight Burning Entities will be susceptible.
            B:"Daylight Burning Distribution"=true

            # Entities listed here will be susceptible to the Daylight Burning Distribution. Entities not listed won't take radiant damage, even if undead. Ideally, only put undead entities that actually burn in daylight here.
            S:"Daylight Burning Entities" <
                minecraft:zombie
                minecraft:zombie_villager
                minecraft:zombie_horse
                minecraft:skeleton
                minecraft:skeleton_horse
                minecraft:stray
                lycanitesmobs:ghoul
                lycanitesmobs:geist
             >

            # Enable/disable evoker fangs distribution. Evoker fanges will inflict force damage when enabled.
            B:"Evoker Fangs Distribution"=true

            # The damage distribution to use for explosion damage; a list of comma separated tuples [(t, a)] with the same rules as mob or weapon damage
            S:"Explosion DamageDistribution"=[(b, 1)]

            # Enable/disable the explosion damage distribution. This applies to player made explosions (TNT, etc.), non-player made explosions (Creepers, etc.) and Firework Rockets (while using Elytra), at least in vanilla. Explosions inflict bludgeoning damage if enabled. If disabled, vanilla handles it normally.
            B:"Explosion Distribution"=true

            # Enable/disable the falling block damage distribution. Falling Blocks inflict bludgeoning damage with this enabled, however this damage can only be reduced by helmets. Vanilla's falling blocks inflict no damage without other mods or unless they are summoned with altered NBT data. If disabled, vanilla handles it normally.
            B:"Falling Block Distribution"=true

            # Enable/disable the fall damage distribution. This applies to any fall damage (falling, ender pearls). Falling inflicts bludgeoning damage with this enabled, can only be reduced by boots, and WILL damage boots. If disabled, vanilla handles it normally.
            B:"Falling Distribution"=true

            # Enable/disable the fire damage distribution. All fire sources (fire, lava, magma etc.) will count as fire damage when enabled.
            B:"Fire Distribution"=true

            # Enable/disable the fly-into-wall damage distribution. This occurs when a player flys into a wall with Elytra. Flying into a wall inflicts bludgeoning damage with this enabled. If disabled, vanilla handles it normally.
            B:"Fly Into Wall Distribution"=true

            # Enable/disable guardian beam distribution. Guardian beams (not the spikes) will inflict force damage when enabled.
            B:"Guardian Beam Distribution"=true

            # Enable/disable guardian thorn distribution. Guardian's thorn attack will inflict piercing damage when enabled.
            B:"Guardian Thorns Damage"=true

            # Enable/disable the lightning damage distribution. Lightning bolts will inflict lightning damage with this enabled.
            B:"Lightning Distribution"=true

            # Enable/disable parrot cookie distribution. Parrots take poison damage when fed cookies
            B:"Parrot Poison Damage"=true

            # Enable/diable poison effect distribution. Suffering from the Poison effect will inflict poison damage when enabled. It still can't be blocked by armor, but it can be blocked by resistances
            B:"Poison Effect Distribution"=true

            # Enable/disable potion damage distribution. Thrown potions of healing will inflict radiant damage against undead, and thrown potions of harming will inflict necrotic damage against non undead when enabled. It still can't be blocked by armor, but it can be blocked by resistances. Also applies to Area of Effect clouds
            B:"Potion Distribution"=true

            # Enable/disable thorns distribution. The Thorns enchantment will inflict force damage when enabled.
            B:"Thorns Distribution"=true

            # Enable/disable the wither damage distribution. Withering will inflict necrotic damage with this enabled. It still can't be blocked by armor, but it can be blocked by resistances
            B:"Wither Distribution"=true
        }

    }

    ##########################################################################################################
    # resistance
    #--------------------------------------------------------------------------------------------------------#
    # Alter the base resistances of armor, shields and mobs
    ##########################################################################################################

    resistance {
        # Modify the base resistance effectiveness of armor
        # Each entry is of the form id;[(t,a)] where:
        #    id is the namespaced id of the item (e.g. minecraft:diamond_chestplate)
        #    [(t,a)] is a list of comma separated tuples of damage types this armor resists (if enabled).
        #       t is the damage type this armor resists. Requires the 'ddd_' prefix.
        #       a is the armor's effectiveness against that damage type.
        # Armors that aren't listed here will have no effectiveness (this doesn't mean the armor does nothing).
        # Resistances effectiveness determines how armor points are distributed. That is, an value of 0.5 means that armor only uses 50% of its usual armor points when defending against that type
        # Malformed entries in this list will be ignored.
        S:"Armor Resistance" <
            minecraft:leather_helmet;[(s, 0.6), (p, 0.7), (b, 0.2)]
            minecraft:leather_chestplate;[(s, 0.6), (p, 0.7), (b, 0.2)]
            minecraft:leather_leggings;[(s, 0.6), (p, 0.7), (b, 0.2)]
            minecraft:leather_boots;[(s, 0.6), (p, 0.7), (b, 0.2)]
            minecraft:chainmail_helmet;[(s, 0.5), (p, 1.0)]
            minecraft:chainmail_chestplate;[(s, 0.5), (p, 1.0)]
            minecraft:chainmail_leggings;[(s, 0.5), (p, 1.0)]
            minecraft:chainmail_boots;[(s, 0.5), (p, 1.0)]
            minecraft:iron_helmet;[(s, 0.8), (p, 0.8), (b, 0.3)]
            minecraft:iron_chestplate;[(s, 0.8), (p, 0.8), (b, 0.3)]
            minecraft:iron_leggings;[(s, 0.8), (p, 0.8), (b, 0.3)]
            minecraft:iron_boots;[(s, 0.8), (p, 0.8), (b, 0.3)]
            minecraft:golden_helmet;[(s, 0.7), (p, 0.6), (b, 0.4), (ddd_poison, 0.7), (ddd_necrotic, 0.7)]
            minecraft:golden_chestplate;[(s, 0.7), (p, 0.6), (b, 0.4), (ddd_poison, 0.7), (ddd_necrotic, 0.7)]
            minecraft:golden_leggings;[(s, 0.7), (p, 0.6), (b, 0.4), (ddd_poison, 0.7), (ddd_necrotic, 0.7)]
            minecraft:golden_boots;[(s, 0.7), (p, 0.6), (b, 0.4), (ddd_poison, 0.7), (ddd_necrotic, 0.7)]
            minecraft:diamond_helmet;[(s, 0.15), (p, 1.0), (b, 0.7), (ddd_necrotic, 0.5)]
            minecraft:diamond_chestplate;[(s, 0.15), (p, 1.0), (b, 0.7), (ddd_necrotic, 0.5)]
            minecraft:diamond_leggings;[(s, 0.15), (p, 1.0), (b, 0.7), (ddd_necrotic, 0.5)]
            minecraft:diamond_boots;[(s, 0.15), (p, 1.0), (b, 0.7), (ddd_necrotic, 0.5)]
         >

        # Modify the base resistance/weakness of mobs.
        # Each entry is of the form id;[(t,a)];[immunities];adaptive;amount where:
        #    id is the namespaced id of the mob (e.g. minecraft:zombie)
        #    [(t,a)] is a list of comma separated tuples (t,a), of damage types this mob resists.
        #       t is the damage type this mob resists. Requires the 'ddd_' prefix. Can use s, p, b instead as shorthand for slashing, piercing, or bludgeoning.
        #       a is the base percent of resistance this mob has to that damage type.
        #    [immunities] is a comma separated list of damage types that this mob is immune to. Requires the 'ddd_' prefix for each damage type.
        #    adaptive is a decimal in the range [0,1] indicating the percent chance that this mob has adaptive immunity, with 0 being never, and 1 being always.
        #    amount is the amount resistances change for this mob when adaptability triggers
        # Mobs that aren't listed here will have no resistances. Positive values indicate a resistance, negative values indicate a weakness.
        # Resistances and weaknesses are percentage based. That is, an value of 0.5 means that mob takes 50% less damage from that type, and a value of -0.5 means that mob takes 50% more damage from that type
        # Malformed entries in this list will be ignored.
        S:"Mob Base Resistance/Weakness" <
            minecraft:bat;[(b, -0.5), (ddd_poison, 0.2)];[];0;0
            minecraft:blaze;[(s, 0.2), (p, 0.2), (b, 0.2), (ddd_fire, 1), (ddd_poison, 0.5), (ddd_cold, -1)];[ddd_fire];0;0
            minecraft:cave_spider;[(p, 0.25), (b, -0.25)];[ddd_poison];0.3;0.25
            minecraft:chicken;[(b, -0.25)];[];0;0
            minecraft:cow;[];[];0;0
            minecraft:creeper;[(ddd_lightning, 0.3)];[ddd_thunder];0;0
            minecraft:donkey;[];[];0;0
            minecraft:elder_guardian;[(s, 0.25), (p, 0.25), (b, 0.25), (ddd_lightning, -0.15)];[];1.0;0.75
            minecraft:ender_dragon;[];[ddd_psychic];0;0
            minecraft:enderman;[(ddd_psychic, 0.5)];[];0.7;0.5
            minecraft:endermite;[(ddd_psychic, 0.7)];[];0.9;0.75
            minecraft:evocation_illager;[(ddd_psychic, 0.3), (ddd_force, 0.4)];[];0;0
            minecraft:ghast;[(b, 0.5)];[ddd_psychic];0;0
            minecraft:guardian;[(ddd_lightning, -0.2)];[];0.25;0.25
            minecraft:horse;[];[];0;0
            minecraft:husk;[(b, 0.25), (ddd_necrotic, 0.75), (ddd_poison, 0.5), (ddd_radiant, -0.25)];[];0;0
            minecraft:llama;[];[];0;0
            minecraft:magma_cube;[(s, 0.25), (p, 0.25), (b, 0.25), (ddd_fire, 1), (ddd_cold, -0.5), (ddd_poison, 0.2)];[b, ddd_acid, ddd_psychic, ddd_thunder, ddd_fire];0;0
            minecraft:mooshroom;[];[];0;0
            minecraft:mule;[];[];0;0
            minecraft:ocelot;[];[];0;0
            minecraft:parrot;[(b, -0.5)];[];0;0
            minecraft:pig;[];[];0;0
            minecraft:polar_bear;[(b, 0.25)];[ddd_cold];0;0
            minecraft:rabbit;[];[];0;0
            minecraft:sheep;[];[];0;0
            minecraft:shulker;[(s, 0.5), (p, -0.5), (b, 0.75), (ddd_psychic, 0.6), (ddd_thunder, 0.8)];[ddd_force];0.25;0.5
            minecraft:silverfish;[(b, -0.25), (p, 0.25), (ddd_fire, -0.1), (ddd_poison, 0.5)];[];0.95;1.0
            minecraft:skeleton;[(s, 0.25), (ddd_necrotic, 0.75), (ddd_radiant, -1)];[ddd_poison];0;0
            minecraft:skeleton_horse;[(s, 0.25), (ddd_necrotic, 0.75), (ddd_radiant, -1)];[ddd_poison];0;0
            minecraft:slime;[(s, -0.25), (b, 0.25), (ddd_thunder, -0.5), (ddd_acid, 1)];[b, ddd_poison, ddd_psychic, ddd_thunder, ddd_acid];0;0
            minecraft:spider;[(p, 0.25), (b, -0.25)];[ddd_poison];0.3;0.25
            minecraft:squid;[];[];0;0
            minecraft:stray;[(s, 0.25), (ddd_necrotic, 0.75), (ddd_radiant, -0.5)];[ddd_poison, ddd_cold];0;0
            minecraft:vex;[];[ddd_psychic, ddd_force];0;0
            minecraft:villager;[];[];0;0
            minecraft:vindication_illager;[];[];0;0
            minecraft:witch;[(ddd_acid, 0.2), (ddd_poison, 0.7)];[];0.1;0.25
            minecraft:wither_skeleton;[(s, 0.25), (ddd_necrotic, 1), (ddd_radiant, -1)];[ddd_poison, ddd_fire, ddd_necrotic];0;0
            minecraft:wolf;[];[];0;0
            minecraft:zombie;[(b, 0.25), (ddd_necrotic, 0.75), (ddd_poison, 0.8), (ddd_radiant, -0.5)];[];0;0
            minecraft:zombie_horse;[(b, 0.25), (ddd_necrotic, 0.75), (ddd_poison, 0.8), (ddd_radiant, -0.5)];[];0;0
            minecraft:zombie_pigman;[(b, 0.25), (ddd_necrotic, 0.75), (ddd_poison, 0.8), (ddd_radiant, -0.5)];[ddd_fire];0;0
            minecraft:zombie_villager;[(b, 0.25), (ddd_necrotic, 0.75), (ddd_poison, 0.8), (ddd_radiant, -0.5)];[];0;0
            minecraft:iron_golem;[(s, 0.5), (p, 0.75), (b, 1.0), (ddd_acid, -0.25), (ddd_force, 0.5), (ddd_thunder, 0.65)];[ddd_poison, ddd_psychic, ddd_necrotic];0;0
            minecraft:snow_golem;[(b, 0.3), (ddd_force, 0.5), (ddd_thunder, 0.65), (ddd_fire, -0.5)];[ddd_cold, ddd_poison, ddd_psychic, ddd_necrotic];0;0
            minecraft:wither;[(s, 0.25), (ddd_necrotic, 1.25), (ddd_poison, 0.8), (ddd_radiant, -0.25)];[ddd_necrotic];0;0
            tconstruct:blueslime;[(s, -0.25), (b, 0.25), (ddd_thunder, -0.5), (ddd_acid, 1)];[b, ddd_poison, ddd_psychic, ddd_thunder, ddd_acid];0;0
            thermalfoundation:blizz;[(s, 0.2), (p, 0.2), (b, 0.2), (ddd_cold, 1), (ddd_poison, 0.5), (ddd_fire, -1)];[ddd_cold];0;0
            thermalfoundation:basalz;[(s, 0.2), (p, 0.2), (b, 0.2), (ddd_force, 1), (ddd_poison, 0.5), (ddd_thunder, -1)];[ddd_force];0;0
            thermalfoundation:blitz;[(s, 0.2), (p, 0.2), (b, 0.2), (ddd_thunder, 1), (ddd_poison, 0.5), (ddd_force, -1)];[ddd_thunder];0;0
            lycanitesmobs:wendigo;[(s, 0.15), (b, 0.15), (ddd_necrotic, 0.6), (ddd_radiant, -0.6)];[ddd_cold, ddd_poison];0;0
            lycanitesmobs:amalgalich;[(ddd_cold, 0.4), (ddd_lightning, 0.3), (ddd_radiant, -0.5)];[ddd_slashing, ddd_piercing, ddd_bludgeoning, ddd_poison, ddd_necrotic];0;0
            lycanitesmobs:geist;[(b, 0.3), (ddd_acid, 0.35), (ddd_fire, 0.45), (ddd_lightning, 0.4), (ddd_radiant, -0.7), (ddd_thunder, 0.9)];[ddd_necrotic, ddd_cold, ddd_poison];0.35;0.2
            lycanitesmobs:ghoul;[(b, 0.25), (ddd_necrotic, 0.75), (ddd_radiant, -0.5)];[ddd_poison];0;0
            lycanitesmobs:cryptkeeper;[(ddd_fire, 0.2), (ddd_necrotic, 0.6), (ddd_psychic, 0.1), (ddd_radiant, -0.5), (ddd_thunder, 0.15)];[ddd_poison];0;0
            lycanitesmobs:reaper;[(s, 0.4), (p, 0.4), (b, 0.2), (ddd_force, 1.0), (ddd_necrotic, 0.7), (ddd_radiant, -0.8), (ddd_thunder, 0.5)];[ddd_psychic, ddd_necrotic, ddd_poison, ddd_force];0;0
            lycanitesmobs:gnekk;[(b, 0.2), (ddd_acid, 0.3)];[ddd_poison];0;0
            lycanitesmobs:pixen;[];[ddd_psychic];0.4;0.4
            lycanitesmobs:clink;[(s, 0.3), (p, 0.1), (b, 0.5), (ddd_acid, -0.3), (ddd_fire, -0.2), (ddd_lightning, -0.15)];[];0;0
            lycanitesmobs:arix;[(s, 0.2), (p, 0.1), (b, 0.3), (ddd_cold, 1.0), (ddd_fire, -1.0)];[ddd_cold];0;0
            lycanitesmobs:afrit;[(s, 0.2), (p, 0.1), (b, 0.3), (ddd_cold, -1.0), (ddd_fire, 1.0)];[ddd_fire];0;0
            lycanitesmobs:jabberwock;[(s, -0.3), (p, -0.1), (b, 0.2), (ddd_cold, 0.1)];[];0;0
            lycanitesmobs:arisaur;[(s, 0.1), (b, 0.5), (ddd_acid, -0.3), (ddd_fire, -0.8), (ddd_necrotic, -0.8), (ddd_poison, -0.5)];[];0;0
            lycanitesmobs:wraamon;[(ddd_force, 0.6), (ddd_psychic, 0.4)];[];0.5;0.3
            lycanitesmobs:manticore;[(s, 0.4), (b, -0.25), (ddd_poison, 0.1)];[];0;0
            lycanitesmobs:barghest;[(b, 0.25)];[];0;0
            lycanitesmobs:conba;[(b, 0.1), (ddd_poison, 0.1)];[];0;0
            lycanitesmobs:warg;[(s, 0.2), (b, 0.25)];[];0;0
            lycanitesmobs:kobold;[(b, -0.2), (ddd_poison, 0.1)];[];0.8;0.3
            lycanitesmobs:makaalpha;[(p, 0.1), (b, 0.2), (ddd_cold, 0.1), (ddd_thunder, 0.2)];[];0;0
            lycanitesmobs:maka;[(p, 0.1), (b, 0.2), (ddd_cold, 0.1), (ddd_thunder, 0.2)];[];0;0
            lycanitesmobs:salamander;[(ddd_acid, 0.2), (ddd_cold, -0.8)];[ddd_fire];0;0
            lycanitesmobs:chupacabra;[(s, 0.15), (b, 0.2), (ddd_necrotic, 0.2), (ddd_poison, 0.2), (ddd_psychic, -0.25)];[];0;0
            lycanitesmobs:geken;[(s, 0.15), (b, 0.3), (ddd_necrotic, -0.2), (ddd_poison, 0.6)];[];0;0
            lycanitesmobs:maug;[(b, 0.2)];[ddd_cold];0;0
            lycanitesmobs:aspid;[(b, 0.2)];[ddd_poison];0;0
            lycanitesmobs:dawon;[(s, 0.3), (p, 0.2), (b, 0.2), (ddd_thunder, -0.25)];[];0;0
            lycanitesmobs:khalk;[(s, 0.8), (p, 0.8), (b, 0.8), (ddd_acid, 0.4), (ddd_cold, -0.8), (ddd_fire, 1.0), (ddd_thunder, -0.25)];[ddd_fire];0;0
            lycanitesmobs:quillbeast;[(b, 0.2)];[];0;0
            lycanitesmobs:yeti;[(b, 0.2), (ddd_fire, -0.8)];[ddd_cold];0;0
            lycanitesmobs:yale;[(s, 0.1), (b, 0.2), (ddd_cold, 0.5), (ddd_fire, 0.5), (ddd_lightning, 0.1)];[];0;0
            lycanitesmobs:epion;[(ddd_lightning, -0.25), (ddd_necrotic, 0.5), (ddd_psychic, 0.5), (ddd_radiant, -0.5)];[];0;0
            lycanitesmobs:uvaraptor;[(b, -0.25), (ddd_lightning, -0.25)];[];0;0
            lycanitesmobs:roc;[(b, -0.25), (ddd_lightning, -0.25)];[];0;0
            lycanitesmobs:raiko;[(b, -0.25), (ddd_lightning, -0.25)];[];0;0
            lycanitesmobs:ventoraptor;[(b, -0.25), (ddd_lightning, -0.25)];[];0;0
            lycanitesmobs:lobber;[(s, 0.5), (b, 0.5), (ddd_cold, -0.5), (ddd_psychic, -0.25)];[ddd_fire];0;0
            lycanitesmobs:wildkin;[(s, 0.2), (b, 0.5), (ddd_cold, 0.25), (ddd_fire, 0.25), (ddd_lightning, 0.1), (ddd_psychic, -0.25)];[];0;0
            lycanitesmobs:troll;[(s, 0.5), (p, 0.5), (b, 0.5), (ddd_acid, 0.2), (ddd_cold, 0.2), (ddd_fire, 0.2), (ddd_psychic, -0.25), (ddd_thunder, -0.2)];[];1;0.25
            lycanitesmobs:ettin;[(s, 0.15), (b, 0.3), (ddd_psychic, -0.25)];[];0;0
            lycanitesmobs:lacedon;[(ddd_lightning, -0.25)];[];0.5;0.5
            lycanitesmobs:roa;[(ddd_acid, -0.25), (ddd_lightning, -0.5)];[];0;0
            lycanitesmobs:silex;[(ddd_acid, -0.25), (ddd_lightning, -1.0)];[];0;0
            lycanitesmobs:abtu;[(ddd_acid, -0.25), (ddd_lightning, -0.75)];[];0;0
            lycanitesmobs:strider;[(b, 0.2), (ddd_lightning, -0.5)];[];0;0
            lycanitesmobs:skylus;[(s, 0.3), (p, -0.25), (b, 0.5), (ddd_acid, -0.15), (ddd_lightning, -0.5), (ddd_thunder, -0.2)];[];0;0
            lycanitesmobs:thresher;[(s, 0.2), (b, 0.2), (ddd_lightning, -1.0)];[];0;0
            lycanitesmobs:aglebemu;[(ddd_lightning, -0.5)];[];0.25;0.25
            lycanitesmobs:cephignis;[(ddd_cold, -0.5), (ddd_lightning, -0.5)];[ddd_fire];1;0.35
            lycanitesmobs:abaia;[(ddd_acid, -0.15), (ddd_lightning, 1.0), (ddd_thunder, 0.5)];[ddd_lightning];0;0
            lycanitesmobs:ika;[(s, 0.25), (p, -0.25), (b, 0.3), (ddd_acid, -0.15), (ddd_lightning, -0.8), (ddd_thunder, 0.5)];[];0;0
            lycanitesmobs:dweller;[(s, 0.2), (ddd_acid, -0.15), (ddd_cold, 0.1), (ddd_fire, 0.1), (ddd_lightning, -0.8), (ddd_poison, 0.5)];[];0;0
            lycanitesmobs:ioray;[(ddd_lightning, -1.0)];[];0;0
            lycanitesmobs:quetzodracl;[(ddd_acid, 0.2), (ddd_cold, 0.2), (ddd_fire, 0.2), (ddd_lightning, -0.2)];[];0;0
            lycanitesmobs:cockatrice;[(ddd_acid, 0.2), (ddd_cold, 0.2), (ddd_fire, 0.2), (ddd_lightning, -0.5)];[];0;0
            lycanitesmobs:morock;[(ddd_acid, 0.2), (ddd_cold, 0.2), (ddd_fire, 0.2)];[];0;0
            lycanitesmobs:ignibus;[(s, 0.2), (p, 0.2), (b, 0.2), (ddd_acid, 0.2), (ddd_cold, -0.3), (ddd_fire, 1.0), (ddd_necrotic, 0.2)];[ddd_fire];0;0
            lycanitesmobs:zoataur;[(s, 0.6), (p, 0.6), (b, 0.6), (ddd_acid, 0.2), (ddd_cold, 0.2), (ddd_fire, 0.2), (ddd_force, 0.3), (ddd_necrotic, 0.2), (ddd_thunder, 0.2)];[];0;0
            lycanitesmobs:remobra;[(ddd_acid, 0.5), (ddd_cold, 0.2), (ddd_fire, 0.2), (ddd_lightning, -0.25), (ddd_poison, 1.0)];[];0;0
            lycanitesmobs:spriggan;[(ddd_acid, -0.25), (ddd_fire, -0.75), (ddd_necrotic, -0.25), (ddd_poison, -0.5)];[];0;0
            lycanitesmobs:tremor;[(ddd_force, 1.0), (ddd_psychic, -0.25), (ddd_thunder, 1.0)];[ddd_thunder];0;0
            lycanitesmobs:vapula;[(s, 0.15), (p, 1.0), (b, 0.8), (ddd_acid, 0.2), (ddd_force, 0.25), (ddd_necrotic, 1.0), (ddd_poison, 1.0), (ddd_psychic, 0.5), (ddd_thunder, -1.0)];[ddd_necrotic, ddd_poison];0;0
            lycanitesmobs:geonach;[(s, 0.75), (p, -0.25), (b, 1.0), (ddd_acid, -0.25), (ddd_necrotic, 1.0), (ddd_poison, 1.0), (ddd_thunder, -1.0)];[ddd_bludgeoning, ddd_necrotic, ddd_poison];0;0
            lycanitesmobs:cinder;[(ddd_cold, -1.0), (ddd_fire, 1.0)];[ddd_fire];0;0
            lycanitesmobs:reiver;[(ddd_cold, 1.0), (ddd_fire, -1.0)];[ddd_cold];0;0
            lycanitesmobs:jengu;[(ddd_acid, -1.0), (ddd_cold, 0.25), (ddd_fire, 1.0), (ddd_lightning, -1.0), (ddd_poison, -0.5), (ddd_thunder, 0.25)];[ddd_fire];0;0
            lycanitesmobs:spectre;[(ddd_force, 1.0), (ddd_psychic, 1.0)];[ddd_psychic];0;0
            lycanitesmobs:banshee;[(ddd_force, 1.0), (ddd_necrotic, 0.5), (ddd_poison, 0.5), (ddd_psychic, 1.0), (ddd_thunder, 1.0)];[ddd_force, ddd_psychic];0;0
            lycanitesmobs:grue;[(ddd_force, 1.0), (ddd_necrotic, 0.5), (ddd_psychic, 0.25), (ddd_radiant, -1.0)];[ddd_force];0;0
            lycanitesmobs:aegis;[(s, 0.25), (b, 0.5), (ddd_force, -0.25), (ddd_necrotic, 0.25), (ddd_poison, 1.0), (ddd_psychic, 1.0), (ddd_thunder, 1.0)];[];0;0
            lycanitesmobs:zephyr;[(ddd_lightning, 1.0)];[ddd_lightning, ddd_thunder];0;0
            lycanitesmobs:djinn;[(ddd_cold, 0.25), (ddd_fire, 0.25), (ddd_lightning, -1.0), (ddd_thunder, 1.0)];[ddd_thunder];0;0
            lycanitesmobs:eechetik;[(ddd_acid, 0.25), (ddd_necrotic, 0.25), (ddd_poison, 1.0), (ddd_psychic, -1.0)];[ddd_poison];0;0
            lycanitesmobs:wraith;[(ddd_fire, 1.0), (ddd_force, 0.25), (ddd_necrotic, 1.0), (ddd_poison, 1.0), (ddd_radiant, -1.0), (ddd_thunder, 1.0)];[ddd_fire, ddd_necrotic, ddd_poison, ddd_thunder];0;0
            lycanitesmobs:sylph;[(ddd_necrotic, 0.25), (ddd_poison, -0.25), (ddd_psychic, 0.15), (ddd_radiant, 1.0)];[ddd_radiant];0;0
            lycanitesmobs:volcan;[(ddd_acid, 0.25), (ddd_cold, -0.5), (ddd_fire, 1.0)];[ddd_fire];0;0
            lycanitesmobs:wisp;[(ddd_fire, 0.25), (ddd_lightning, 0.25), (ddd_radiant, 0.75), (ddd_thunder, -0.25)];[];0;0
            lycanitesmobs:argus;[(ddd_force, -0.5), (ddd_psychic, 1.0)];[];0;0
            lycanitesmobs:nymph;[(ddd_necrotic, 1.0), (ddd_poison, -1.0), (ddd_psychic, 0.5), (ddd_radiant, 1.0)];[ddd_radiant, ddd_necrotic];0;0
            lycanitesmobs:xaphan;[(ddd_acid, 1.0), (ddd_poison, 0.5), (ddd_psychic, -0.5)];[ddd_acid];0;0
            lycanitesmobs:herma;[(s, 0.5), (p, 0.5), (b, 0.3), (ddd_acid, 0.2), (ddd_lightning, -0.5)];[];0;0
            lycanitesmobs:sutiramu;[(s, 0.2), (p, 0.2), (ddd_fire, -0.5), (ddd_poison, 1.0)];[ddd_poison];0;0
            lycanitesmobs:vespidqueen;[(p, 0.15), (b, -0.25), (ddd_acid, -0.25), (ddd_fire, -1.0), (ddd_force, 0.25), (ddd_lightning, -0.25), (ddd_necrotic, -0.25), (ddd_poison, 1.25), (ddd_psychic, 0.25), (ddd_thunder, 0.25)];[ddd_poison];1;0.5
            lycanitesmobs:vespid;[(p, 0.15), (b, -0.5), (ddd_acid, -0.5), (ddd_fire, -1.0), (ddd_lightning, -0.5), (ddd_necrotic, -0.25), (ddd_poison, 1.0)];[ddd_poison];0.3;0.25
            lycanitesmobs:joustalpha;[(p, 0.8), (b, 0.2), (ddd_acid, -0.25), (ddd_necrotic, -0.25), (ddd_poison, 0.5)];[];0.6;0.3
            lycanitesmobs:joust;[(p, 0.8), (b, 0.2), (ddd_acid, -0.25), (ddd_necrotic, -0.25), (ddd_poison, 0.5)];[];0.5;0.3
            lycanitesmobs:tarantula;[(p, 0.3), (b, -0.3), (ddd_fire, -0.5)];[ddd_poison];0.3;0.25
            lycanitesmobs:calpod;[(s, 0.15), (b, -0.25), (ddd_acid, -0.25), (ddd_fire, -1.0), (ddd_lightning, -0.25), (ddd_necrotic, -0.25), (ddd_poison, 0.5)];[];0.7;0.6
            lycanitesmobs:erepede;[(p, 0.5), (ddd_fire, -1.0), (ddd_poison, 0.7)];[];0;0
            lycanitesmobs:concapedesegment;[(b, -0.15), (ddd_fire, -1.0), (ddd_poison, 0.7)];[ddd_poison];0.5;0.5
            lycanitesmobs:concapede;[(b, -0.15), (ddd_fire, -1.0), (ddd_poison, 0.7)];[ddd_poison];0.5;0.5
            lycanitesmobs:frostweaver;[(p, 0.25), (b, -0.25), (ddd_cold, 1.0), (ddd_fire, -1.5)];[];0.3;0.25
            lycanitesmobs:eyewig;[(ddd_acid, 0.5), (ddd_poison, 0.5)];[];0.25;0.15
            lycanitesmobs:gorgomite;[(p, 0.2), (b, -0.25), (ddd_fire, -1.0), (ddd_poison, 0.25)];[];0.9;0.8
            lycanitesmobs:darkling;[(p, 0.2), (b, -0.25), (ddd_fire, -1.0), (ddd_necrotic, 0.8), (ddd_poison, 0.25), (ddd_psychic, -0.25), (ddd_radiant, -0.5)];[];0.25;0.25
            lycanitesmobs:lurker;[(p, 0.2), (b, -0.25), (ddd_fire, -1.0), (ddd_poison, 1.0)];[ddd_poison];0.25;0.25
            lycanitesmobs:triffid;[(ddd_acid, -1.0), (ddd_fire, -1.0), (ddd_lightning, -0.25), (ddd_necrotic, -1.0), (ddd_poison, 1.0), (ddd_psychic, 0.6), (ddd_thunder, 1.0)];[ddd_thunder, ddd_poison];0;0
            lycanitesmobs:treant;[(s, -0.15), (b, 1.0), (ddd_acid, -0.5), (ddd_fire, -1.0), (ddd_necrotic, -0.25), (ddd_poison, -0.25)];[];0;0
            lycanitesmobs:ent;[(s, -0.3), (b, 1.0), (ddd_acid, -1.0), (ddd_fire, -1.0), (ddd_poison, -0.25)];[];0;0
            lycanitesmobs:shambler;[(s, -0.25), (p, 1.0), (b, 0.5), (ddd_acid, -1.0), (ddd_fire, -1.0), (ddd_lightning, -0.25), (ddd_necrotic, -0.5), (ddd_poison, 1.0), (ddd_psychic, 0.25), (ddd_thunder, 0.25)];[ddd_piercing, ddd_poison];0;0
            lycanitesmobs:beholder;[];[];0.8;1
            lycanitesmobs:trite;[(b, -0.25), (ddd_necrotic, 0.25), (ddd_poison, 0.25), (ddd_psychic, 0.25), (ddd_radiant, -0.5)];[];0.75;0.75
            lycanitesmobs:shade;[(s, 0.25), (p, 0.25), (b, 0.25), (ddd_psychic, 1.0), (ddd_radiant, 0.5)];[ddd_psychic];0;0
            lycanitesmobs:asmodeus;[(s, 0.25), (p, 0.25), (b, 0.25), (ddd_acid, -0.25), (ddd_force, 0.5), (ddd_lightning, -0.5), (ddd_necrotic, 1.0), (ddd_poison, 1.0), (ddd_psychic, 1.0), (ddd_radiant, -0.5)];[ddd_necrotic, ddd_psychic];0;0
            lycanitesmobs:astaroth;[(s, 0.15), (p, 0.15), (b, 0.15), (ddd_acid, -0.5), (ddd_lightning, -0.5), (ddd_necrotic, 1.0), (ddd_poison, 0.75), (ddd_psychic, 0.75), (ddd_radiant, -0.75)];[ddd_necrotic];0;0
            lycanitesmobs:krake;[(s, 0.15), (ddd_fire, -0.5), (ddd_force, 0.5), (ddd_poison, -0.75)];[ddd_thunder];0.5;0.5
            lycanitesmobs:crusk;[(s, 0.15), (p, 0.15), (b, 0.15)];[];0;0
            lycanitesmobs:serpix;[(s, 0.15), (p, 0.15), (b, 0.15), (ddd_cold, 1.0), (ddd_fire, -1.0)];[ddd_cold];0;0
            lycanitesmobs:gorger;[(s, 0.15), (p, 0.15), (b, 0.15), (ddd_cold, -1.0), (ddd_fire, 1.0)];[ddd_fire];0;0
            lycanitesmobs:behemoth;[(ddd_fire, 0.9), (ddd_necrotic, 0.8), (ddd_psychic, 0.5), (ddd_radiant, -1.0)];[ddd_necrotic, ddd_fire];0;0
            lycanitesmobs:belph;[(ddd_fire, 0.5), (ddd_necrotic, 0.4), (ddd_psychic, 0.5), (ddd_radiant, -1.0)];[ddd_necrotic, ddd_fire];0.1;0.25
            lycanitesmobs:pinky;[(ddd_fire, 0.5), (ddd_necrotic, 0.5), (ddd_psychic, 0.5), (ddd_radiant, -0.8)];[ddd_necrotic, ddd_fire];0;0
            lycanitesmobs:archvile;[(ddd_fire, 1.0), (ddd_necrotic, 1.0), (ddd_psychic, 1.0), (ddd_radiant, -1.0)];[ddd_necrotic, ddd_fire];0;0
            lycanitesmobs:cacodemon;[(ddd_fire, 1.0), (ddd_force, 0.2), (ddd_lightning, 1.0), (ddd_necrotic, 1.0), (ddd_psychic, 0.6), (ddd_radiant, -1.0)];[ddd_necrotic, ddd_fire];0;0
            lycanitesmobs:rahovart;[(s, 0.1), (p, 0.1), (b, 0.1), (ddd_fire, 1.0), (ddd_force, 0.6), (ddd_necrotic, 1.0), (ddd_poison, 0.5), (ddd_psychic, 1.0), (ddd_radiant, -1.0)];[ddd_necrotic, ddd_fire];0;0
         >

        # Set the base resistance values for the player
        # This is likely only applicable to new worlds! Old worlds may not reflect this change!
        # The format for this is the same as Mob Base Resistance/Weakness, minus the leading id part and adaptability chance. All properties are usuable (immunities, adaptability), except adaptability chance, which will be set to 1 if adaptability amount is set to a non zero value
        S:"Player Base Resistance"=[];[];0

        # Modify how shields block damage.
        # Each entry is of the form id;[(t,a)] where:
        #    id is the namespaced id of the item (e.g. minecraft:shield)
        #    [(t,a)] is a list of comma separated tuples of damage types this shield blocks.
        #       t is the type this shield blocks. Requires the 'ddd_' prefix. Can use s, p, b as shorthand for slashing, piercing and bludgeoning damage, respectively.
        #       a is the effectiveness the shield has against that damage type.
        # Shields not listed here will act as normal shields (will block all damage they can interact with).
        # Shield effectiveness determines how much physical damage a shield can block. A shield with 0.3 slashing effectiveness can only block 30% of incoming slashing damage. The remaining 70% goes through the shield and damages the player, following regular damage calculation.
        # Blocking damage will still knock the attacker back, but the knockback strength is a percentage of the original vanilla knockback; that percentage comes from the amount of damage actually reduced (a shield that only blocks 33% of the incoming damage will knock the attacker back by about 33% of the vanilla amount).
        # Malformed entries in this list will be ignored.
        S:"Shield Effectiveness" <
            minecraft:shield;[(s, 0.8), (p, 0.8), (b, 0.4)]
         >
    }

    ##########################################################################################################
    # enchantments
    #--------------------------------------------------------------------------------------------------------#
    # Configure enchantments
    ##########################################################################################################

    enchantments {
        # If false, the Brute Force enchantment won't be registered. Worlds that had this enchant enabled will have this enchant removed from all items if loaded with this option set to false.
        B:"Enable Brute Force"=true

        # If false, the Sly Strike enchantment won't be registered. Worlds that had this enchant enabled will have this enchant removed from all items if loaded with this option set to false.
        B:"Enable Sly Strike"=true
    }

    ##########################################################################################################
    # client
    #--------------------------------------------------------------------------------------------------------#
    # Alter client side settings
    ##########################################################################################################

    client {
        # If true, All Distint Damage Descriptions related tooltip information will always be shown (Basically, SHIFT or CTRL never need to be held on tooltips).
        B:"Never Hide Info"=false

        # If true, the Damage Distribution tooltip appears for all items. If false, it only appears for items with a damage distribution manually set.
        B:"Show Damage Distribution Tooltip for all items"=false

        # If true, Distinct Dasmage Descriptions will show mob damage in spawn egg tooltips when holding <SHIFT>.
        # Regular item damage distribution information will not be shown so long as the spawn eggs are not configured to have a particular distribution.
        # It is recommended to not set a distribution for spawn eggs if this is set to true, as this will make the tooltip cleaner.
        B:"Show Mob Damage On Spawn Items"=false

        # If true, Distinct Damage Descriptions will use icons for built in damage types (slashing, piercing, bludgeoning).
        # These icons will appear in place of those names everwhere except under the "Starting Immunities" in spawn egg tooltips.
        B:"Use Damage Type Icons"=false

        # If true, Distinct Damage Descriptions will try to show numerical values when possible instead of percent values.
        # This works for armor and items only. Projectiles and resistances don't have numerical values to use, so the config doesn't apply here.
        B:"Use Numerical Values When Possible"=false
    }

    ##########################################################################################################
    # compatibility/integration
    #--------------------------------------------------------------------------------------------------------#
    # Tweak DDD's behaviour with other mods
    ##########################################################################################################

    "compatibility/integration" {

        ##########################################################################################################
        # construct's armory integration
        #--------------------------------------------------------------------------------------------------------#
        # Configure integration with Construct's Armory
        ##########################################################################################################

        "construct's armory integration" {
            # This dictates where DDD puts armor immunity traits, on the platers or on the core.
            # Only applies to new pieces made. Will not overwrite or change existing armor pieces.
            # No Trim option, as that's a little OP.
            # Valid values:
            # CORE
            # PLATES
            S:"Armor Immunity Trait Location"=PLATES

            # A list of entries of the form material;types that grant immunity traits to armor pieces. Only works for built in types.
            # material is the registration name of the Tinker's material. Pretty much always lowercase.
            # types is a comma separated list of DDD types, with the 'ddd_' prefix.
            S:"Armor Immunity Traits" <
                endstone;ddd_psychic
                netherrack;ddd_necrotic
                slime;ddd_acid
                blueslime;ddd_acid
                knightslime;ddd_piercing
                sponge;ddd_bludgeoning, ddd_thunder
                manyullyn;ddd_force
                obsidian;ddd_slashing
                electrum;ddd_lightning
             >

            # Determine the armor distribution for materials' plates pieces.
            # Each entry is the same as a regular armor distribution entry, that is, of the form material;[(t,a)] where:
            #    material is the registration name of the Tinker's material. Pretty much always lowercase
            #    [(t,a}] is a comma sepatated list of tuples, (t,a), where:
            #       t is the type. requires the 'ddd_' prefix, but can use s, p, b as shorthand for slashing, piercing and bludgeoning
            #       a is the effectiveness this material has against that damage type.
            S:"Armor Material Distribution" <
                wood;[(s, 0.5), (p, 0.3), (b, 1)]
                stone;[(s, 1), (p, 1), (b, 1), (ddd_thunder, 0.5)]
                flint;[(s, 0.7), (p, 0.4), (b, 1), (ddd_thunder, 0.3)]
                cactus;[(s, 0.5), (p, 0.4), (b, 1)]
                bone;[(s, 1), (p, 0.5), (b, 0.6), (ddd_poison, 0.8)]
                obsidian;[(s, 0.6), (ddd_force, 0.8), (ddd_fire, 1), (ddd_acid, 0.4)]
                prismarine;[(s, 1), (p, 0.7), (b, 1), (ddd_cold, 0.5)]
                endstone;[(s, 1), (p, 1), (b, 1), (ddd_psychic, 0.7), (ddd_force, 0.3)]
                paper;[(b, 0.5)]
                sponge;[(s, 0.6), (b, 1), (ddd_lightning, 1)]
                firewood;[(s, 0.5), (p, 0.3), (b, 1), (ddd_cold, 1)]
                iron;[(s, 1), (p, 0.7), (b, 0.3)]
                pigiron;[(s, 1), (p, 0.7), (b, 0.3)]
                knightslime;[(s, 0.7), (p, 0.7), (b, 1), (ddd_acid, 1), (ddd_poison, 1), (ddd_psychic, 0.6)]
                slime;[(b, 1), (ddd_acid, 1), (ddd_poison, 1), (ddd_force, 0.5)]
                blueslime;[(b, 1), (ddd_acid, 1), (ddd_poison, 1), (ddd_force, 0.5)]
                magmaslime;[(b, 1), (ddd_fire, 1), (ddd_acid, 1), (ddd_poison, 1), (ddd_cold, 0.4)]
                netherrack;[(s, 0.25), (p, 0.25), (b, 1), (ddd_necrotic, 1)]
                cobalt;[(s, 0.1), (p, 1), (b, 0.7)]
                ardite;[(s, 0.6), (p, 0.6), (b, 0.6), (ddd_necrotic, 1), (ddd_psychic, 1)]
                manyullyn;[(s, 0.7), (p, 1), (b, 0.6), (ddd_force, 1), (ddd_thunder, 1)]
                copper;[(s, 1), (p, 0.7), (b, 0.3)]
                bronze;[(s, 1), (p, 0.7), (b, 0.3)]
                lead;[(s, 1), (p, 0.7), (b, 0.3), (ddd_acid, 0.3), (ddd_poison, 0.5), (ddd_necrotic, 0.4)]
                silver;[(s, 1), (p, 0.7), (b, 0.3), (ddd_radiant, 1), (ddd_necrotic, 0.7)]
                electrum;[(s, 1), (p, 0.7), (b, 0.3), (ddd_lightning, 1), (ddd_thunder, 1)]
                steel;[(s, 1), (p, 0.7), (b, 0.5), (ddd_thunder, 0.7)]
             >
        }

        ##########################################################################################################
        # tinker's construct integration
        #--------------------------------------------------------------------------------------------------------#
        # Configure integration with Tinker's Construct
        ##########################################################################################################

        "tinker's construct integration" {
            # Control's a material's influence. A material has two parts to its influence: and actual influence rating and a distribution.
            # A material's distribution is its preferred distribution it tries to lean the tool towards.
            # A material's influence rating is a measure of how good that material is at influencing head pieces.
            S:"Material Influence" <
                wood;[(b, 1)];0.6
                stone;[(b, 1)];1
                flint;[(b, 1)];0.3
                cactus;[(p, 1)];0.7
                bone;[(b, 1)];0.3
                obsidian;[(s, 0.8), (b, 0.2)];0.6
                prismarine;[(s, 0.6), (p, 0.4)];0.8
                endstone;[(b, 0.85), (ddd_psychic, 0.15)];0.9
                paper;[(s, 1)];0
                sponge;[(b, 1)];2
                firewood;[(ddd_fire, 1)];1.8
                iron;[(p, 1)];0.1
                pigiron;[(s, 1)];0.1
                knightslime;[(s, 0.5), (b, 0.5)];0.3
                slime;[(ddd_acid, 1)];1
                blueslime;[(ddd_acid, 1)];1
                magmaslime;[(ddd_fire, 0.5), (ddd_acid, 0.5)];1
                netherrack;[(ddd_necrotic, 0.7), (b, 0.3)];0.7
                cobalt;[(s, 1)];0.2
                ardite;[(ddd_necrotic, 0.7), (s, 0.7)];0.6
                manyullyn;[(ddd_force, 0.7), (s, 0.3)];0.7
                copper;[(p, 0.9), (b, 0.1)];0.1
                bronze;[(p, 0.5), (s, 0.5)];0.1
                lead;[(s, 0.8), (ddd_poison, 0.2)];0.6
                silver;[(p, 0.8), (ddd_radiant, 0.2)];0.6
                electrum;[(s, 0.6), (ddd_lightning, 0.4)];0.6
                steel;[(s, 1)];0.1
             >

            # Control a tool's bias. Tool bias is a tinker's tool's ability to stick to its base distribution.
            # Base distributions are defined in items.
            # Entries are of the form id;bias
            #    id is the namespaced id of the item (e.g. tconstruct:rapier). The mod name can be excluded ONLY if it's from tconstruct. Tinker tools added from other mods need the full namepaced id.
            #    bias is the tool's bias. A non negative decimal value. Negatives will be treated as 0. This value represents a percentage, so values under 1 are recommended, but you can use values over 1 for tool's whose distributions will never ever change.
            S:"Tool Bias" <
                pickaxe;0.5
                shovel;0.75
                hatchet;0.35
                mattock;0.6
                kama;0.5
                scythe;0.3
                hammer;0.9
                excavator;0.8
                lumberaxe;0.45
                broadsword;0.2
                longsword;0.25
                rapier;0.5
                battlesign;0.6
                frypan;1
                cleaver;0
                arrow;0.8
                shortbow;2
                longbow;2
                bolt;0.8
                crossbow;2
                shuriken;0
             >
        }

        ##########################################################################################################
        # lycanite's mobs integration
        #--------------------------------------------------------------------------------------------------------#
        # Configure integration with Lycanite's Mobs
        ##########################################################################################################

        "lycanite's mobs integration" {
            # Enable/disable the Acid Distribution. Acid and Sharacid will inflict acid damage.
            B:"Enable Acid Distribution"=true

            # Enable/disable the Doomfire Distribution. Burning in Doomfire will inflict 50% fire and 50% necrotic damage. Otherwise, will deal fire damage if the fire distribution is enabled.
            B:"Enable Doomfire Distribution"=true

            # Enable/disable the Frostfire Distribution. Burning in Frostfire will inflict 30% fire and 70% cold damage.
            B:"Enable Frostfire Distribution"=true

            # Enable/disable the Hellfire Distribution. Burning in Hellfire will inflict 30% fire and 70% necrotic damage. Otherwise, will deal fire damage if the fire distribution is enabled.
            B:"Enable Hellfire Distribution"=true

            # Enable/disable the Icefire Distribution. Burning in Icefire will inflict 50% fire and 50% cold damage.
            B:"Enable Icefire Distribution"=true

            # Enable/disable the Ooze Distribution. Ooze and Rabbitooze will inflict cold damage.
            B:"Enable Ooze Distribution"=true

            # Enable/disable the Scorchfire Distribution. Burning in Scorchfire will inflict 50% fire and 50% force damage. Otherwise, will deal fire damage if the fire distribution is enabled.
            B:"Enable Scorchfire Distribution"=true

            # Enable/disable the Shadowfire Distribution. Burning in Shadowfire will inflict 20% fire, 40% psychic damage and 40% necrotic damage. Otherwise, will inflict necrotic damage if the wither distribution is enabled.
            B:"Enable Shadowfire Distribution"=true

            # Enable/disable the smited distribution. Burning entities will take radiant damage while Smited
            B:"Enable Smited Distribution"=true

            # Enable/disable the Smitefire Distribution. Burning in Smitefire will inflict 30% fire and 70% radiant damage. Otherwise, will inflict fire damage if the fire distribution is enabled.
            B:"Enable Smitefire Distribution"=true

            # This is to give DDD a hint as to what creatures fire what types of projectiles.
            # DDD needs this hint as when mobs are summoned as minions from Lycanite's Mobs, they use a different damage source instead of their projectiles.
            # This list lets you set mobs' damage distribution to the projectile they fire when they are minions, instead of setting that mobs damage distribution to the same thing as the projectile manually.
            # You don't need to use this, you can just set the mob's damage distribution yourself, if you want. This is provided for convenience. You also only really need to include mobs that are able to be summoned, but the default includes most, if not all mobs
            # Format is <projectile name>;mobs
            #     <projectile name> is the name of the projectile used in the projectile distributions configuration, without the mod id.
            #     mobs is a comma separated list of mob ids (without their modid) that shoot that projectile.
            S:"Mob Projectiles" <
                acidsplash;xaphan
                aetherwave;slyph
                aquapulse;jengu
                arcanelaserstorm;beholder
                blizzard;serpix
                bloodleech;epion
                boulderblast;troll
                chaosorb;argus
                crystalshard;vapula
                demonicblast;cacodemon
                devilstar;astaroth
                doomfireball;archvile,belph
                ember;cinder
                faebolt;nymph
                frostweb;frostweaver
                frostbolt;reiver
                hellfireball;behemoth
                icefireball;arix
                lifedrain;spriggan
                lightball;wisp
                magma;lobber,gorger
                mudshot;erepede
                poisonray;eyewig
                poop;conba
                quill;quillbeast
                scorchfireball;afrit,ignibus
                spectralbolt;reaper
                throwingscythe;clink
                tricksterflare;pixen
                tundra;wendigo
                venomshot;remobra
                waterjet;ioray
                whirlwind;djinn
             >
        }

        ##########################################################################################################
        # tetra integration
        #--------------------------------------------------------------------------------------------------------#
        # Configure Tetra integration
        ##########################################################################################################

        "tetra integration" {
            # Modify material distributions for Tetra tool parts.
            # This is how the base tool part distribution gets modified.
            # The format is <nbt_tag>;<distribution>;<bias> where:
            #    <nbt_tag> is the material name found in the item NBT. Only the material name is needed, the part type referenced in the tag should not be included here. (That is, you only need to specify a material once, not for each part it's usable in).
            #    <distribution> is the distribution the material has, as specified in item distributions
            #    <bias> is the measure of how well this material influences parts. The difference between this and the tool part bias is used to determine how much this matereial influences the part's distribution.
            # A tool like /ct nbt or an NBT editor is great for finding the material names. All the defaults are included here.
            S:"Tetra Material Distributions" <
                log;[(b, 1)];0.5
                acacia;[(b, 1)];0.5
                birch;[(b, 1)];0.5
                dark_oak;[(b, 1)];0.5
                jungle;[(b, 1)];0.5
                oak;[(b, 1)];0.5
                spruce;[(b, 1)];0.5
                stone;[(b, 1)];1
                cobblestone;[(b, 1)];1
                diorite;[(b, 1)];1
                granite;[(b, 1)];1
                andesite;[(b, 1)];1
                flint;[(b, 1)];0.3
                iron;[(s, 1)];0
                gold;[(b, 0.5), (p, 0.5)];0.4
                diamond;[(s, 1)];0.5
                obsidian;[(s, 0.8), (b, 0.2)];0.6
             >

            # Modify base distributions for Tetra tool parts.
            # This is the distribution that gets modified by the material used.
            # The format is <nbt_tag>;<distribution>;<bias> where:
            #    <nbt_tag> is the NBT tag for the part type. blade parts are prefixed with 'sword/' and duplex parts are prefixed with 'duplex/'. Duplex tools don't need to specify left or right heads; the same is used for both. Tool butts don't count towards Duplex tool distributions, so the entry 'duplex/butt...' can be omitted.
            #    <distribution> is a distribution list, as specified in item distributions.
            #    <bias> is the bias this part has towards its distribution The difference between this and the material bias is used to determine how much the material influences the distribution.
            # A tool like /ct nbt or an NBT editor can be used to find the NBT tag names. All the defaults are included here.
            S:"Tetra Tool Part Base Distributions" <
                sword/heavy_blade;[(s, 0.5), (b, 0.5)];0.5
                sword/machete;[(s, 1)];1
                sword/basic_blade;[(s, 1)];0
                sword/shortblade;[(s, 0.5), (p, 0.5)];0.25
                duplex/adze;[(p, 1)];1
                duplex/claw;[(s, 0.5), (p, 0.5)];0.5
                duplex/basic_axe;[(s, 0.6), (b, 0.4)];0.3
                duplex/basic_hammer;[(b, 1)];1
                duplex/basic_pickaxe;[(p, 1)];0.5
                duplex/hoe;[(p, 1)];0.3
                duplex/sickle;[(s, 1)];0.4
             >
        }

    }

    ##########################################################################################################
    # development tools
    #--------------------------------------------------------------------------------------------------------#
    # Potentially useful troubleshooting/debugging tools for those configuring the mod - especially for modpacks
    ##########################################################################################################

    "development tools" {
        # A blanket switch to turn off all features. If true, features will follow their original configured behaviour. A warning message is given to all players who join worlds while true.
        # This is to make sure pack makers are aware of when the development tools are on or not.
        # To minimize log spam (and to actually be useful), it is recommended to playtest in a very controlled environment (void superflat world) when this feature is on, so the console doesn't get flooded with messages.
        B:Enabled=false

        # If enabled, DDD will log information whenever it checks if it should update mob resistances from adaptability. If adaptability is going to take place (forced or naturally), DDD will show what types the mob will be adapting to.
        # Setting this to ENABED_AND_IN_CHAT will additionally send this information to the in game chat (i.e to all players in game)
        # Valid values:
        # DISABLED
        # ENABLED
        # ENABLED_AND_IN_CHAT
        S:"Show Adaptive Calculations"=DISABLED

        # If enabled, DDD will log information whenever a LivingAttackEvent is fired (when an entity is attacked, but before damage calculations begin). DDD will log the attacker name and id, defender name and id, original damage source, and damage amount
        # Useful if you need to know what damage source names are.
        # Setting this to ENABLED_AND_IN_CHAT will additionally send this information to the in game chat (i.e. to all players in game)
        # Valid values:
        # DISABLED
        # ENABLED
        # ENABLED_AND_IN_CHAT
        S:"Show Attack Info"=DISABLED

        # If enabled, DDD will display config errors for any multi-entry config option in the chat when a player joins the world.
        B:"Show Config Errors on Join"=false

        # If enabled, DDD will log information whenever it determines and classifies damage. DDD will display the different damage types inflicted, along with their damage amounts.
        # Setting this to ENABED_AND_IN_CHAT will additionally send this information to the in game chat (i.e to all players in game)
        # Valid values:
        # DISABLED
        # ENABLED
        # ENABLED_AND_IN_CHAT
        S:"Show Damage Classification"=DISABLED

        # If enabled, DDD will log information whenever a LivingDamageEvent is fired (when an entity is about to take damage, after vanilla armor and potion calculations, and when DDD applies mob resistances and immunities). DDD will log the final amount of damage being dealt to the entity after all DDD calculations.
        # Setting this to ENABED_AND_IN_CHAT will additionally send this information to the in game chat (i.e to all players in game)
        # Valid values:
        # DISABLED
        # ENABLED
        # ENABLED_AND_IN_CHAT
        S:"Show Damage Info"=DISABLED

        # If enabled, DDD will log information whenever it gather mob resistances and immunities. DDD will display the resistances and immunities it has found.
        # Setting this to ENABED_AND_IN_CHAT will additionally send this information to the in game chat (i.e to all players in game)
        # Valid values:
        # DISABLED
        # ENABLED
        # ENABLED_AND_IN_CHAT
        S:"Show Defense Classification"=DISABLED

        # If enabled, DDD will log information whenever a LivingAttackEvent is fired (when an entity is about to take damage, and when DDD reduces damage via shields and applies armor bonuses). DDD will log the armor bonuses that the entity gets for that attack (as a result of their armor distributions), along with the current damage.
        # Setting this to ENABED_AND_IN_CHAT will additionally send this information to the in game chat (i.e to all players in game)
        # Valid values:
        # DISABLED
        # ENABLED
        # ENABLED_AND_IN_CHAT
        S:"Show Hurt Info"=DISABLED

        # If enabled, DDD will log information whenever it does shield reductions. If the shield block gets canceled, that gets displayed instead. If not canceled, DDD will display the shield distribution it used for the calculation.
        # Setting this to ENABED_AND_IN_CHAT will additionally send this information to the in game chat (i.e to all players in game)
        # Valid values:
        # DISABLED
        # ENABLED
        # ENABLED_AND_IN_CHAT
        S:"Show Shield Calculations"=DISABLED
    }

}


